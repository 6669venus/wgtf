///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace NGTTestAutomation.Generic_app_UI
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AFCT_colapse recording.
    /// </summary>
    [TestModule("d79ef13b-66ee-466e-a284-af5d45ad7bb9", ModuleType.Recording, 1)]
    public partial class AFCT_colapse : ITestModule
    {
        /// <summary>
        /// Holds an instance of the NGTTestAutomation.NGTTestAutomationRepository repository.
        /// </summary>
        public static NGTTestAutomation.NGTTestAutomationRepository repo = NGTTestAutomation.NGTTestAutomationRepository.Instance;

        static AFCT_colapse instance = new AFCT_colapse();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AFCT_colapse()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AFCT_colapse Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.5")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.5")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.WGListView.ExpandButton' at Center.", repo.MainWindow.WGListView.ExpandButtonInfo, new RecordItemIndex(0));
            repo.MainWindow.WGListView.ExpandButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.WGListView.ExpandIconArea' at Center.", repo.MainWindow.WGListView.ExpandIconAreaInfo, new RecordItemIndex(1));
            repo.MainWindow.WGListView.ExpandIconArea.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.WGListView.ExpandButton1' at Center.", repo.MainWindow.WGListView.ExpandButton1Info, new RecordItemIndex(2));
            repo.MainWindow.WGListView.ExpandButton1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.WGListView.ExpandButton2' at Center.", repo.MainWindow.WGListView.ExpandButton2Info, new RecordItemIndex(3));
            repo.MainWindow.WGListView.ExpandButton2.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.WGListView.ExpandButton3' at Center.", repo.MainWindow.WGListView.ExpandButton3Info, new RecordItemIndex(4));
            repo.MainWindow.WGListView.ExpandButton3.Click();
            Delay.Milliseconds(200);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating CompareImage (Screenshot: 'Screenshot6' with region {X=0,Y=0,Width=254,Height=167}) on item 'MainWindow.WGListView1'.", repo.MainWindow.WGListView1Info, new RecordItemIndex(5));
                Validate.CompareImage(repo.MainWindow.WGListView1Info, WGListView1_Screenshot6, WGListView1_Screenshot6_Options, Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.WGListView.ExpandButton' at Center.", repo.MainWindow.WGListView.ExpandButtonInfo, new RecordItemIndex(6));
            repo.MainWindow.WGListView.ExpandButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.WGListView.ExpandIconArea' at Center.", repo.MainWindow.WGListView.ExpandIconAreaInfo, new RecordItemIndex(7));
            repo.MainWindow.WGListView.ExpandIconArea.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.WGListView.ExpandButton1' at Center.", repo.MainWindow.WGListView.ExpandButton1Info, new RecordItemIndex(8));
            repo.MainWindow.WGListView.ExpandButton1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.WGListView.ExpandButton2' at Center.", repo.MainWindow.WGListView.ExpandButton2Info, new RecordItemIndex(9));
            repo.MainWindow.WGListView.ExpandButton2.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.WGListView.ExpandButton3' at Center.", repo.MainWindow.WGListView.ExpandButton3Info, new RecordItemIndex(10));
            repo.MainWindow.WGListView.ExpandButton3.Click();
            Delay.Milliseconds(200);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating CompareImage (Screenshot: 'Screenshot5' with region {X=0,Y=0,Width=260,Height=668}) on item 'MainWindow.WGListView1'.", repo.MainWindow.WGListView1Info, new RecordItemIndex(11));
                Validate.CompareImage(repo.MainWindow.WGListView1Info, WGListView1_Screenshot5, WGListView1_Screenshot5_Options, Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(11)); }
            
        }

#region Image Feature Data
        CompressedImage WGListView1_Screenshot6
        { get { return repo.MainWindow.WGListView1Info.GetScreenshot6(new Rectangle(0, 0, 254, 167)); } }

        Imaging.FindOptions WGListView1_Screenshot6_Options
        { get { return Imaging.FindOptions.Parse("0.8;EdgesSobel;0,0,254,167;True;10000000;0ms"); } }

        CompressedImage WGListView1_Screenshot5
        { get { return repo.MainWindow.WGListView1Info.GetScreenshot5(new Rectangle(0, 0, 260, 668)); } }

        Imaging.FindOptions WGListView1_Screenshot5_Options
        { get { return Imaging.FindOptions.Parse("0.8;EdgesSobel;0,0,260,668;True;10000000;0ms"); } }

#endregion
    }
#pragma warning restore 0436
}
