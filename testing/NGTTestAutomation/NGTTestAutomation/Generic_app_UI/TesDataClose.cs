///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace NGTTestAutomation.Generic_app_UI
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The TesDataClose recording.
    /// </summary>
    [TestModule("c4eaf583-d2e1-4a57-b9c3-030e98f51787", ModuleType.Recording, 1)]
    public partial class TesDataClose : ITestModule
    {
        /// <summary>
        /// Holds an instance of the NGTTestAutomation.NGTTestAutomationRepository repository.
        /// </summary>
        public static NGTTestAutomation.NGTTestAutomationRepository repo = NGTTestAutomation.NGTTestAutomationRepository.Instance;

        static TesDataClose instance = new TesDataClose();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public TesDataClose()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static TesDataClose Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.5")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.5")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'Generic_app.MainWindow.TestData' at 5;4.", repo.Generic_app.MainWindow.TestDataInfo, new RecordItemIndex(0));
            repo.Generic_app.MainWindow.TestData.DoubleClick(new Location(TestData_Screenshot1, "5;4", TestData_Screenshot1_Options));
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TestData.Close' at 7;4.", repo.TestData.CloseInfo, new RecordItemIndex(1));
            repo.TestData.Close.Click(new Location(Close_Screenshot1, "7;4", Close_Screenshot1_Options));
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
        CompressedImage TestData_Screenshot1
        { get { return repo.Generic_app.MainWindow.TestDataInfo.GetScreenshot1(new Rectangle(18, 3, 15, 11)); } }

        Imaging.FindOptions TestData_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage Close_Screenshot1
        { get { return repo.TestData.CloseInfo.GetScreenshot1(new Rectangle(28, 5, 16, 11)); } }

        Imaging.FindOptions Close_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
